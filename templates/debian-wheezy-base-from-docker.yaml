#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# RECIPE: <%= recipe_name %>
#
# DESCRIPTION: This recipe build a base debian wheezy appliance using lxc 
# container.
#
# TEMPLATE: <%= @name %>
#
#==============================================================================

---
# Loads some helpful aliases
aliases: defaults.yaml
# Enables qcow2 checkpoint
# checkpoint: docker.yaml
#== Global variables use by Kameleon engine and the steps
global:
  ## User varibales : used by the recipe
  cachedir: /var/cache/kameleon
  rootfs: $$kameleon_cwd/rootfs
  user_name: kameleon
  arch: amd64

  distrib: debian
  release: wheezy
  docker_image: kameleon-$${distrib}-$$release
  docker_container: kameleon_$$kameleon_uuid
  # DNS servers : opendns
  docker_dns: 208.67.222.222

  ## System variables. Required by kameleon engine
  # Include specific steps
  include_steps: [$$distrib/$$release, $$distrib]

  # Shell session from where we launch exec_out commands. There is often a
  # local bash session, but it can be a remote shell on other machines or on
  # any shell. (eg. bash, chroot, fakechroot, ssh, tmux, lxc...)
  out_context:
    cmd: bash
    workdir: $$kameleon_cwd

  # Shell session that allows us to connect to the building machine in order to
  # configure it and setup additional programs
  ssh_options: -o "StrictHostKeyChecking=no" -o "ForwardAgent=yes"
  default_env: "USER=root HOME=/root PATH=/usr/bin:/usr/sbin:/bin:/sbin LC_ALL=POSIX"
  in_context:
    cmd: >
      env -i $$default_env ssh $$ssh_options localhost \
      -p $(cat CONTAINER_PORT) -i insecure_ssh_dsa_key /bin/bash
    workdir: /

#== Bootstrap the new system and create the 'in_context'
bootstrap:
  - debootstrap_to_docker:
    - image: $$docker_image
    - release: $$release
    - arch: $$arch
    - repository: http://ftp.fr.debian.org/debian/
    - archive_file: $$cachedir/$$distrib/$$release/$$arch/debootstrap.tar.gz
  - start_docker:
    - image: $$docker_image
    - container: $$docker_container
    - dns: $$docker_dns


#== Install and configuration steps
# WARNING: this part should be independante from the build context (whenever
# possible...)
setup:
  # Install
  - software_install:
    - packages: > 
        debian-keyring ntp zip unzip rsync sudo less vim bash-completion
        extlinux
  - kernel_install:
    - arch: $$arch
  # Configuration
  - system_config:
    - locales: fr_FR en_US
    - lang: fr_FR.UTF-8
    - timezone: Europe/Paris
    - network_hostname: mydebian
  - keyboard_config:
    - layout: "fr,us"
  - network_config
  - create_user:
    - name: $$user_name
    - group: admin
    - password: $$user_name

#== Export the generated appliance in the format of your choice
# export:
#   - save_appliance_from_nbd:
#     - filename: "$${distrib}-$${release}"
#     - save_as_qcow2
    # - save_as_tgz
    # - save_as_raw
    # - save_as_vmdk
    # - save_as_vdi
