# Save Appliance

- save_as_tgz:
  - check_cmd_local: qemu-nbd
  - exec_local: echo "Exporting appliance to tar.gz..."
  - exec_local: qemu-nbd -c $$nbd_device $$input -n || fail nbd device $$nbd_device is unavailable
  - exec_local: mkdir -p $$rootfs
  - exec_local: mount $${nbd_device}p1 $$rootfs || fail cannot mount /
  - exec_local: cp $$rootfs/etc/fstab $$kameleon_cwd/fstab.orig
  - write_local:
    - $$rootfs/etc/fstab
    - |
      # UNCONFIGURED FSTAB FOR BASE SYSTEM
  - exec_local: |
      tar -zcf $$output.tar.gz --numeric-owner \
      --exclude=tmp/* \
      --exclude=dev/* \
      --exclude=proc/* \
      --exclude=sys/* \
      --exclude=run/* \
      --exclude=mnt/* \
      --exclude=media/* \
      --exclude=lost+found/* \
      -C $$rootfs .
  - exec_local: cat $$kameleon_cwd/fstab.orig > $$rootfs/etc/fstab
  - exec_local: sync
  - exec_local: echo "Saved tar.gz appliance to $$output.tar.gz"
  - on_export_clean:
    - exec_local: sync
    - exec_local: "echo try umount $$rootfs... ; mountpoint -q $$rootfs && umount -f -l $$rootfs || true"
    - exec_local: qemu-nbd -d $$nbd_device
    - exec_local: pgrep qemu-nbd | xargs -I {} kill -9 {} || true

- save_as_raw:

  - exec_local: qemu-img convert -O raw $$input $$output.raw
  - exec_local: echo "Saved raw appliance to $$output.raw"

- save_as_qcow2:
  - exec_local: qemu-img convert -O qcow2 $$input $$output.qcow2
  - exec_local: echo "Saved qcow2 appliance to $$output.qcow2"

- save_as_qed:
  - exec_local: qemu-img convert -O qed $$input $$output.qed
  - exec_local: echo "Saved qed appliance to $$output.qed"

- save_as_vmdk:
  - exec_local: qemu-img convert -O vmdk $$input $$output.vmdk
  - exec_local: echo "Saved vmdk appliance to $$output.vmdk"

- save_as_vdi:
  - exec_local: qemu-img convert -O vdi $$input $$output.vdi
  - rescue:
    - exec_local: |
        echo "Compact the vdi disk"
        VBoxManage modifyhd $$output.vdi --compact 2>&1
    - exec_local: |
        echo "Cannot compact the vdi disk : VBoxManage is missing."
  - exec_local: echo "Saved vdi appliance to $$output.vdi"
