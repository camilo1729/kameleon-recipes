# # Save Chroot Appliance

- save_as_tgz:
  - pipe:
    - exec_in: tar -zcf - -C / . --numeric-owner --one-file-system --exclude=tmp/*
    - exec_out: cat > ./$$kameleon_recipe_name.tar.gz
  - exec_out: echo "Saved tar.gz appliance to $(pwd)/$$kameleon_recipe_name.tar.gz"

  # - exec_out: echo "TODO export !"
      # tar -zcf $$distrib\_$$arch.tar.gz -C $$rootfs . \
      #   --numeric-owner --one-file-system --exclude=tmp/*

#TODO update this
# - save_as_kameleon_env:
#   # we have to add a postinstall
#   - write_local_file:
#     - $$distrib\_$$arch.yaml
#     - |
#       ---
#       name: $$distrib\_$$arch
#       version: 1
#       visibility: private
#       destructive: true
#       os: linux
#       image:
#         file: $$distrib\_$$arch.tar.gz
#         kind: tar
#         compression: gzip
#       boot:
#         kernel: /vmlinuz
#         initrd: /initrd.img
#       multipart: false
#       filesystem: ext4
#       partition_type: 0

# - save_as_raw:
#   - exec_out: |
#       mv image.raw $$distrib\_$$arch.raw
#       ln -s $$distrib\_$$arch.raw image.raw

# - save_as_vmdk:
#   - check_cmd: qemu-img
#   - exec_out: |
#       qemu-img convert -O vmdk image.raw $$distrib\_$$arch.vmdk
#   - erb_config:
#     - config.vmx.erb
#     - $$distrib.vmx

# - save_as_qcow2:
#   - check_cmd: qemu-img
#   - exec_out: |
#       qemu-img convert -O qcow2 image.raw $$distrib\_$$arch.qcow2

# - save_as_vdi:
#   - check_cmd: VBoxManage
#   - exec_out: |
#       VBoxManage convertdd image.raw $$distrib\_$$arch.vdi
