
- clean_containers:
  - on_checkpoint: redo
  - on_export_clean:
    - exec_out: echo "Stopping trailing containers"
    - exec_out: touch CONTAINERS_TO_CLEAN
    - exec_out: cat CONTAINERS_TO_CLEAN | xargs -I {} docker kill {}
    - exec_out: echo "Removing trailing containers"
    - exec_out: cat CONTAINERS_TO_CLEAN | xargs -I {} docker rm {}
    - exec_out: rm -f CONTAINERS_TO_CLEAN

- configure_sshd:
  - exec_out: echo -e  'y\n' | ssh-keygen -q -t dsa -f $$insecure_ssh_key -N ''
  - exec_out: chmod 600 $$insecure_ssh_key*
  - exec_out: |
      CID=$(docker run --dns $$dns -d -v "$(pwd):/tmp" $$image:latest \
            /bin/bash -c "rm -fr /root/.ssh ;  \
                          mkdir -p /root/.ssh ;  \
                          ssh-keygen -q -t dsa -f /root/.ssh/id_dsa -N '' ; \
                          cat /tmp/$${insecure_ssh_key}.pub > /root/.ssh/authorized_keys")
  - exec_out: echo "$CID" >> CONTAINERS_TO_CLEAN
  - exec_out: |
      docker images | grep $$image \
                    | grep sshd \
                    | awk '{print $3}' \
                    | xargs -I {} docker rmi {}
  - exec_out: docker commit $CID $$image:sshd > /dev/null
  - exec_out: docker tag $$image:sshd $$image:latest


- export_appliance:
  - on_export_init:
    - exec_out: docker export $(cat MAIN_CONTAINER_ID) > $$image.tar.gz
