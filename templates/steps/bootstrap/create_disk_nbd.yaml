# Create disk
#
# this step create the appliance disk and initialize the
# checkpoint mechanism with Qemu Network Block Device (NBD)

- nbd_device: /dev/nbd0

- create_initial_image:
  - check_cmd_out: qemu-img
  - exec_out: mkdir -p checkpoints
  - exec_out: |
      if [ ! -e "$$container" ] ; then
        qemu-img create -f qcow2 checkpoints/base_$$container $$image_size
        # keep a link to the last checkpoint disk
        ln -sf checkpoints/base_$$container $$container
      fi

- load_nbd_module:
  - on_bootstrap_init:
    - exec_out: |
        lsmod | grep nbd >/dev/null \
        || modprobe nbd max_part=63 \
        || fail failed to load nbd module into kernel

- attach_nbd_device:
  # this microstep must be skipped because it is already done by the
  # checkpoint restore function
  - on_checkpoint: skip
  - check_cmd_out: qemu-nbd
  - exec_out: echo Connecting $$container to nbd device $$nbd_device
  - exec_out: qemu-nbd -c $$nbd_device "$(readlink $$container)" -n || fail nbd device $$container is unavailable


- detach_nbd_device:
  # this miscrostep must be done again ensure that the nbd device is
  # detached
  - on_checkpoint: redo
  - on_export_clean:
    - exec_out: echo "sync" ; sync
    - exec_out: qemu-nbd -d $$nbd_device
    - exec_out: "pgrep qemu-nbd | xargs -I {} kill -9 {} || true"


