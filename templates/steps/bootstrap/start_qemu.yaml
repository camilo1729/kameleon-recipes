- timeout: 10

- start_qemu_vm:
  - on_checkpoint: redo
  - check_cmd_local: qemu-system-$$qemu_arch
  - exec_local: echo "Starting qemu..."
  - exec_local: |
      if [ $$qemu_enable_kvm = true ]; then
        ENABLE_KVM="-enable-kvm"
      fi
  - exec_local: |
        if [ -f "vm_state_to_load.txt" ]
        then
            SAVED_STATE="$(cat vm_state_to_load.txt)"
            LOADVM="-loadvm $SAVED_STATE"
            rm -f vm_state_to_load.txt
        fi
  - exec_local: |
        qemu-system-$$qemu_arch  \
          $ENABLE_KVM -no-reboot \
          -cdrom $$kameleon_cwd/boot2kameleon.iso \
          -drive file="$$qemu_image_disk",cache=unsafe,media=disk,if=virtio,id=drive0 \
          -smp $${qemu_cpu} \
          -m $$qemu_memory_size \
          -rtc base=localtime \
          -net nic,model=virtio -net user \
          -redir tcp:$${qemu_ssh_port}::22 \
          -monitor unix:$$qemu_monitor_socket,server,nowait \
          -pidfile $$qemu_pidfile \
          -daemonize -vnc :1 $LOADVM
  - exec_local: |
        echo -n "Waiting for SSH to become available for out_context"
        until ssh-keyscan -4 -p $$qemu_ssh_port localhost  2>&1 | grep -e ssh-rsa -e ssh-dsa &> /dev/null
        do
          echo -n "."
          sleep 1
        done
        echo " ~> OK"

- force_shutdown_qemu_vm:
  - on_checkpoint: redo
  - check_cmd_local: socat
  - on_setup_clean:
    - exec_local: |
        if [ -S $$qemu_monitor_socket ]; then
          echo "Shutting down qemu virtual machine..."
          echo system_reset | socat - UNIX-CONNECT:$$qemu_monitor_socket
        fi
    - exec_local: |
        if [ -f $$qemu_pidfile ]; then
          _QEMU_PID=$(cat $$qemu_pidfile)
          if ps -p $_QEMU_PID > /dev/null
          then
              echo "Killing QEMU (pid: $_QEMU_PID)..."
              kill "$_QEMU_PID"
          fi
          rm -f $$qemu_pidfile
        fi
