#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: Ubuntu 12.04 LTS (Precise Pangolin) base system.
#
#==============================================================================

---
# Loads some helpful aliases
aliases: defaults.yaml
# Enables qemu checkpoint
checkpoint: qemu.yaml
#== Global variables use by Kameleon engine and the steps
global:
  ## User varibales : used by the recipe
  user_name: kameleon
  user_password: $$user_name

  # Distribution
  distrib: ubuntu
  release: precise
  arch: amd64
  kernel_arch: $$arch
  hostname: kameleon-$$distrib

  ## QEMU options
  qemu_enable_kvm: "$(egrep '(vmx|svm)' /proc/cpuinfo > /dev/null && echo true)"
  qemu_cpu: 2
  qemu_memory_size: 512
  qemu_monitor_port: 10023
  qemu_ssh_port: 55423
  qemu_arch: x86_64
  qemu_image_size: 10G
  qemu_image_disk: $$kameleon_cwd/base_$$kameleon_recipe_name.qcow2

  boot2kameleon_url: http://kameleon.imag.fr/iso/boot2kameleon-0.1.0-$${qemu_arch}-insecure.iso
  insecure_ssh_key_url: http://kameleon.imag.fr/iso/keys/insecure_id_rsa

  # rootfs options
  rootfs: /rootfs
  rootfs_download_path: $$rootfs
  filesystem_type: ext4

  # rootfs options
  rootfs: /rootfs
  rootfs_download_path: $$rootfs

  # Apt options
  apt_repository: http://archive.ubuntu.com/ubuntu/
  apt_enable_restricted: true
  apt_install_recommends: false

  ## System variables. Required by kameleon engine
  # Include specific steps
  include_steps:
    - $$distrib/$$release
    - $$distrib
    - debian

  ssh_config_file: $$kameleon_cwd/ssh_config
  out_context:
    cmd: ssh -o ConnectTimeout=1 -F $$ssh_config_file $${kameleon_recipe_name} -t /bin/bash
    workdir: /root/kameleon_workdir
    proxy_cache: 10.0.2.2

  in_context:
    cmd: ssh -o ConnectTimeout=1 -F $$ssh_config_file $${kameleon_recipe_name} -t chroot $$rootfs /bin/bash
    workdir: /root/kameleon_workdir
    proxy_cache: 10.0.2.2

#== Bootstrap the new system and create the 'in_context'
bootstrap:
  - prepare_qemu
  - start_qemu
  - enable_checkpoint
  - initialize_disk:
    - disk_device: /dev/sda
  - debootstrap:
    - include_pkg: acpi-support kbd bzip2 udev locales less
    - release: $$release
    - arch: $$arch
    - repository: $$apt_repository
    - enable_cache: true
    - variant: minbase
  - start_chroot


#== Install and configuration steps
setup:
  # Install
  - configure_apt:
    - repository: $$apt_repository
    - enable_restricted: $$apt_enable_restricted
    - install_recommends: $$apt_install_recommends
  - upgrade_system:
    - dist_upgrade: true
  - install_software:
    - packages: >
        apt-transport-https ca-certificates sudo less bash-completion
        curl nano vim psmisc language-pack-en linux-image-generic ifupdown
        iptables iputils-ping iproute pciutils psmisc extlinux
        syslinux-themes-ubuntu
  - configure_kernel:
    - arch: $$arch
  - install_bootloader
  # Configuration
  - configure_system:
    - locales: POSIX C en_US fr_FR de_DE
    - lang: en_US.UTF-8
    - timezone: UTC
  - configure_keyboard:
    - layout: "us,fr,de"
  - configure_network
  - create_group:
    - name: admin
  - create_user:
    - name: $$user_name
    - groups: sudo admin
    - password: $$user_password

#== Export the generated appliance in the format of your choice
export:
  - disable_checkpoint
  - qemu_save_appliance:
    - input: $$qemu_image_disk
    - output: $$kameleon_cwd/$$kameleon_recipe_name
    - save_as_qcow2
    # - save_as_qed
    # - save_as_tgz
    # - save_as_raw
    # - save_as_vmdk
    # - save_as_vdi
