create: |
    if [ -e "$$container" ] ; then
      parent_of_@microstep_id="$(readlink $$container)"
      mkdir -p checkpoints
      pushd checkpoints
      rm -f @microstep_id_$${container}
      qemu-img create -f qcow2 "@microstep_id_$${container}" \
                      -o backing_file=$(basename "$parent_of_@microstep_id")
      popd
      ln -sf checkpoints/@microstep_id_$$container $$container
      sync
      qemu-nbd -d $$nbd_device
      qemu-nbd -c $$nbd_device "$(readlink $$container)" -t -n ||  fail nbd device $$container is unavailable
    fi

apply: |
    # apply command use the backing file that represent the real state to restore 
    previous_id=$(qemu-img info "checkpoints/@microstep_id_$${container}" \
                  | grep backing \
                  | sed -e 's/.*checkpoints\/\(.*\)_devmachine.qcow2\(.*\)/\1/p' \
                  | uniq)

    ln -sf "checkpoints/${previous_id}_$${container}" "$$container"
    qemu-nbd -d $$nbd_device
    qemu-nbd -c $$nbd_device "$(readlink $$container)" -t -n ||  fail nbd device $$container is unavailable

remove: |
    rm -f "checkpoints/@microstep_id_$${container}"

list: |
    if [ -d "checkpoints" ] ; then
      ls checkpoints/ | sed -e 's/\(.*\)_$${container}/\1/p' | uniq
    fi
