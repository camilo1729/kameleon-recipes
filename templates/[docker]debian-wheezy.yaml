#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# RECIPE: <%= recipe_name %>
#
# DESCRIPTION: Build a debian wheezy appliance using Docker.
#
# TEMPLATE: <%= @name %>
#
#==============================================================================

---
# Loads some helpful aliases
aliases: defaults.yaml
# Enables qcow2 checkpoint
checkpoint: docker.yaml
#== Global variables use by Kameleon engine and the steps
global:
  ## User varibales : used by the recipe
  cachedir: /var/cache/kameleon
  user_name: kameleon
  arch: amd64

  distrib: debian
  release: wheezy
  docker_image: kameleon-$${distrib}-$$release
  # DNS servers : opendns
  docker_dns: 208.67.222.222

  ## System variables. Required by kameleon engine
  # Include specific steps
  include_steps:
    - $$distrib/$$release
    - $$distrib

  # Shell session from where we launch exec_out commands. There is often a
  # local bash session, but it can be a remote shell on other machines or on
  # any shell. (eg. bash, chroot, fakechroot, ssh, tmux, lxc...)
  out_context:
    cmd: bash
    workdir: $$kameleon_cwd

  # Shell session that allows us to connect to the building machine in order to
  # configure it and setup additional programs
  ssh_options: -o StrictHostKeyChecking=no -o ForwardAgent=yes
  ssh_port: $(cat MAIN_CONTAINER_PORT)
  insecure_ssh_key: insecure_ssh_dsa_key
  in_context:
    cmd: LC_ALL=POSIX ssh $$ssh_options localhost -p $$ssh_port -i $$insecure_ssh_key -t /bin/bash
    workdir: /

#== Bootstrap the new system and create the 'in_context'
bootstrap:
  - debootstrap:
    - release: $$release
    - arch: $$arch
    - repository: http://ftp.fr.debian.org/debian/
    - rootfs_archive: $$cachedir/$$distrib/$$release/$$arch/debootstrap.tar.gz
  - prepare_docker:
    - image: $$docker_image
    - dns: $$docker_dns
    - rootfs_archive: $$cachedir/$$distrib/$$release/$$arch/debootstrap.tar.gz
  - start_docker:
    - image: $$docker_image
    - dns: $$docker_dns
    - hostname: kameleon-$$distrib

#== Install and configuration steps
# WARNING: this part should be independante from the build context (whenever
# possible...)
setup:
  # Install
  - software_install:
    - packages: > 
        debian-keyring ntp zip unzip rsync sudo less vim bash-completion
  - config_kernel
  # Configuration
  - system_config:
    - locales: fr_FR en_US
    - lang: fr_FR.UTF-8
    - timezone: Europe/Paris
  - keyboard_config:
    - layout: "fr,us"
  - create_user:
    - name: $$user_name
    - group: admin
    - password: $$user_name

#== Export the generated appliance in the format of your choice
export:
  - export_docker_image:
    - image: $(cat MAIN_CONTAINER_ID)
    - rootfs_archive: "$${kameleon_recipe_name}.tar.gz"
  - create_disk_nbd:
    - consider_checkpoint: false
    - image_size: 2G
    - filename: "$${kameleon_recipe_name}.qcow2"
    - device: /dev/nbd1
  - populate_disk:
    - filename: "$${kameleon_recipe_name}.qcow2"
    - device: /dev/nbd1
    - mountdir: rootfs
    - filesystem_type: ext4
    - rootfs_archive: "$${kameleon_recipe_name}.tar.gz"
  - start_chroot:
    - rootfs: rootfs
    - dns: $$docker_dns
    - mount_chroot
  - install_bootloader:
    - mountdir: rootfs
    - device: /dev/nbd1
  - compact_qcow_img:
    - mountdir: rootfs
    - filename: "$${kameleon_recipe_name}.qcow2"
